// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  COLLABORATOR
  USER
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  document  String     @unique
  name      String
  Role      Role
  orders    Order[]

  @@map("user")
}

model Address {
  id            String  @id @default(uuid())
  street        String 
  number        String 
  complement    String?
  neighborhood  String 
  city          String 
  state         String 
  country       String 
  postalCode    String 
}

model Product {
  id           String    @id @default(uuid())
  productIdView String   @unique
  name         String
  description  String
  price        Decimal   @db.Decimal(10, 2)
  stock        Int
  brand        String
  categoryId   String
  category     Category  @relation(fields: [categoryId], references: [id])
  images       Json?
  OrderItems   OrderItem[]

  @@map("product")
}

model Category {
  id           String     @id @default(uuid())
  description  String

  products     Product[]
  @@map("category")
}

model Order {
  id          String      @id @default(uuid())
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  items       OrderItem[]
  status      OrderStatus @default(PENDING)
  totalAmount Decimal     @db.Decimal(10, 2)
  createdAt   DateTime    @default(now())

  @@map("order")
}

model OrderItem {
  id        String   @id @default(uuid())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)

  @@map("order_item")
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}